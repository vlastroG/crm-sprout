@using Consulting.Models
@using Consulting.WebClient.Helpers
@model Consulting.WebClient.Models.TaskEditorViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Редактировать статус заявки</h1>

<h4>Заявка</h4>
<hr />
<div class="row">
    <div>
        <dl>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ConsultingTaskId)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ConsultingTaskId)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CreationDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CreationDate)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CreatorName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CreatorName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CreatorName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CreatorName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CreatorEmail)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CreatorEmail)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CompanyService)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CompanyService)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
        </dl>
        <form asp-action="Edit">
            @* <input type="hidden" asp-for="StatusId" /> *@
            <input type="hidden" asp-for="ConsultingTaskId" />
            @{
                bool success = Context.Items.TryGetValue(Constants.ConsultingTaskStatusesUri, out object? valueModel);
                if (success && valueModel is IEnumerable<ConsultingTaskStatus> statuses)
                {
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    foreach (var item in statuses)
                    {
                        var listItem = new SelectListItem() { Text = item.Name, Value = item.Id.ToString() };
                        if (Model.ConsultingTaskId == item.Id)
                        {
                            listItem.Selected = true;
                        }
                        listItems.Add(listItem);
                    }
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.StatusId, listItems)
                    </div>
                }
            }
            <div class="form-group">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Назад к списку</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
