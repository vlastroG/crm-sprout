@using Consulting.Models
@using Consulting.WebClient.Helpers
@model Consulting.WebClient.Models.TaskEditorViewModel
@inject IHttpClientFactory httpClientFactory

@{
    ViewData["Title"] = "Create";
}

<h1>IT - консалтинг</h1>

<h4>Оставить заявку или задать вопрос</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CreatorName" class="control-label"></label>
                <input asp-for="CreatorName" class="form-control" />
                <span asp-validation-for="CreatorName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CreatorEmail" class="control-label"></label>
                <input asp-for="CreatorEmail" class="form-control" />
                <span asp-validation-for="CreatorEmail" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.CompanyService)
                @{
                    using HttpClient client = httpClientFactory.CreateClient();
                    var consultingServices = await client.GetFromJsonAsync<IEnumerable<CompanyService>>(Constants.CompanyServicesUri);
                    if (consultingServices is not null)
                    {
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        foreach (var item in consultingServices)
                        {
                            var listItem = new SelectListItem() { Text = item.Name, Value = item.Id.ToString() };
                            listItems.Add(listItem);
                        }
                        <div class="form-group">
                            @Html.DropDownListFor(model => model.CompanyServiceId, listItems)
                        </div>
                    }
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Создать" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
